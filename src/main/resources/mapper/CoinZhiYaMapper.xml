<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.dao.CoinZhiYaMapper">
  <resultMap id="BaseResultMap" type="com.itcast.bean.CoinZhiYa">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="coin_name" jdbcType="VARCHAR" property="coinName" />
    <result column="qishu_id" jdbcType="INTEGER" property="qishuId" />
    <result column="create_time_s" jdbcType="TIMESTAMP" property="createTimeS" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="end_time_s" jdbcType="TIMESTAMP" property="endTimeS" />
    <result column="end_time" jdbcType="INTEGER" property="endTime" />
    <result column="limit_day" jdbcType="INTEGER" property="limitDay" />
    <result column="next_day" jdbcType="VARCHAR" property="nextDay" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="leave_num" jdbcType="DECIMAL" property="leaveNum" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="out_day" jdbcType="INTEGER" property="outDay" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, title, coin_name, qishu_id, create_time_s, create_time, end_time_s, end_time, 
    limit_day, next_day, total, leave_num, amount, status, type, out_day
  </sql>
  <select id="selectByExample" parameterType="com.itcast.bean.CoinZhiYaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coin_zhiya
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_zhiya
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_zhiya
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itcast.bean.CoinZhiYaExample">
    delete from coin_zhiya
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itcast.bean.CoinZhiYa">
    insert into coin_zhiya (id, uid, title, 
      coin_name, qishu_id, create_time_s, 
      create_time, end_time_s, end_time, 
      limit_day, next_day, total, 
      leave_num, amount, status, 
      type, out_day)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{coinName,jdbcType=VARCHAR}, #{qishuId,jdbcType=INTEGER}, #{createTimeS,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=INTEGER}, #{endTimeS,jdbcType=TIMESTAMP}, #{endTime,jdbcType=INTEGER}, 
      #{limitDay,jdbcType=INTEGER}, #{nextDay,jdbcType=VARCHAR}, #{total,jdbcType=DECIMAL}, 
      #{leaveNum,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{outDay,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.itcast.bean.CoinZhiYa">
    insert into coin_zhiya
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="coinName != null">
        coin_name,
      </if>
      <if test="qishuId != null">
        qishu_id,
      </if>
      <if test="createTimeS != null">
        create_time_s,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="endTimeS != null">
        end_time_s,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="limitDay != null">
        limit_day,
      </if>
      <if test="nextDay != null">
        next_day,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="leaveNum != null">
        leave_num,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="outDay != null">
        out_day,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="coinName != null">
        #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="qishuId != null">
        #{qishuId,jdbcType=INTEGER},
      </if>
      <if test="createTimeS != null">
        #{createTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="endTimeS != null">
        #{endTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="limitDay != null">
        #{limitDay,jdbcType=INTEGER},
      </if>
      <if test="nextDay != null">
        #{nextDay,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="leaveNum != null">
        #{leaveNum,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="outDay != null">
        #{outDay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itcast.bean.CoinZhiYaExample" resultType="java.lang.Long">
    select count(*) from coin_zhiya
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coin_zhiya
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.coinName != null">
        coin_name = #{record.coinName,jdbcType=VARCHAR},
      </if>
      <if test="record.qishuId != null">
        qishu_id = #{record.qishuId,jdbcType=INTEGER},
      </if>
      <if test="record.createTimeS != null">
        create_time_s = #{record.createTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.endTimeS != null">
        end_time_s = #{record.endTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=INTEGER},
      </if>
      <if test="record.limitDay != null">
        limit_day = #{record.limitDay,jdbcType=INTEGER},
      </if>
      <if test="record.nextDay != null">
        next_day = #{record.nextDay,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.leaveNum != null">
        leave_num = #{record.leaveNum,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.outDay != null">
        out_day = #{record.outDay,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coin_zhiya
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      coin_name = #{record.coinName,jdbcType=VARCHAR},
      qishu_id = #{record.qishuId,jdbcType=INTEGER},
      create_time_s = #{record.createTimeS,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=INTEGER},
      end_time_s = #{record.endTimeS,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=INTEGER},
      limit_day = #{record.limitDay,jdbcType=INTEGER},
      next_day = #{record.nextDay,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DECIMAL},
      leave_num = #{record.leaveNum,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      out_day = #{record.outDay,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itcast.bean.CoinZhiYa">
    update coin_zhiya
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="coinName != null">
        coin_name = #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="qishuId != null">
        qishu_id = #{qishuId,jdbcType=INTEGER},
      </if>
      <if test="createTimeS != null">
        create_time_s = #{createTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="endTimeS != null">
        end_time_s = #{endTimeS,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="limitDay != null">
        limit_day = #{limitDay,jdbcType=INTEGER},
      </if>
      <if test="nextDay != null">
        next_day = #{nextDay,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="leaveNum != null">
        leave_num = #{leaveNum,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="outDay != null">
        out_day = #{outDay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itcast.bean.CoinZhiYa">
    update coin_zhiya
    set uid = #{uid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      coin_name = #{coinName,jdbcType=VARCHAR},
      qishu_id = #{qishuId,jdbcType=INTEGER},
      create_time_s = #{createTimeS,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=INTEGER},
      end_time_s = #{endTimeS,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=INTEGER},
      limit_day = #{limitDay,jdbcType=INTEGER},
      next_day = #{nextDay,jdbcType=VARCHAR},
      total = #{total,jdbcType=DECIMAL},
      leave_num = #{leaveNum,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      out_day = #{outDay,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>