<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.dao.CollectHistoryMapper">
  <resultMap id="BaseResultMap" type="com.itcast.bean.CollectHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="income" jdbcType="TINYINT" property="income" />
    <result column="number" jdbcType="DECIMAL" property="number" />
    <result column="token_id" jdbcType="INTEGER" property="tokenId" />
    <result column="operate" jdbcType="TINYINT" property="operate" />
    <result column="from" jdbcType="VARCHAR" property="from" />
    <result column="to" jdbcType="VARCHAR" property="to" />
    <result column="block_height" jdbcType="BIGINT" property="blockHeight" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="tx" jdbcType="VARCHAR" property="tx" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, income, number, token_id, operate, from, to, block_height, fee, tx, update_time, 
    create_time, remark, status
  </sql>
  <select id="selectByExample" parameterType="com.itcast.bean.CollectHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collect_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from collect_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itcast.bean.CollectHistoryExample">
    delete from collect_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itcast.bean.CollectHistory">
    insert into collect_history (id, uid, income, 
      number, token_id, operate, 
      from, to, block_height, 
      fee, tx, update_time, 
      create_time, remark, status
      )
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{income,jdbcType=TINYINT}, 
      #{number,jdbcType=DECIMAL}, #{tokenId,jdbcType=INTEGER}, #{operate,jdbcType=TINYINT}, 
      #{from,jdbcType=VARCHAR}, #{to,jdbcType=VARCHAR}, #{blockHeight,jdbcType=BIGINT}, 
      #{fee,jdbcType=DECIMAL}, #{tx,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.itcast.bean.CollectHistory">
    insert into collect_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="income != null">
        income,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="tokenId != null">
        token_id,
      </if>
      <if test="operate != null">
        operate,
      </if>
      <if test="from != null">
        from,
      </if>
      <if test="to != null">
        to,
      </if>
      <if test="blockHeight != null">
        block_height,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="tx != null">
        tx,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="income != null">
        #{income,jdbcType=TINYINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=DECIMAL},
      </if>
      <if test="tokenId != null">
        #{tokenId,jdbcType=INTEGER},
      </if>
      <if test="operate != null">
        #{operate,jdbcType=TINYINT},
      </if>
      <if test="from != null">
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        #{to,jdbcType=VARCHAR},
      </if>
      <if test="blockHeight != null">
        #{blockHeight,jdbcType=BIGINT},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="tx != null">
        #{tx,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itcast.bean.CollectHistoryExample" resultType="java.lang.Long">
    select count(*) from collect_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update collect_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.income != null">
        income = #{record.income,jdbcType=TINYINT},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=DECIMAL},
      </if>
      <if test="record.tokenId != null">
        token_id = #{record.tokenId,jdbcType=INTEGER},
      </if>
      <if test="record.operate != null">
        operate = #{record.operate,jdbcType=TINYINT},
      </if>
      <if test="record.from != null">
        from = #{record.from,jdbcType=VARCHAR},
      </if>
      <if test="record.to != null">
        to = #{record.to,jdbcType=VARCHAR},
      </if>
      <if test="record.blockHeight != null">
        block_height = #{record.blockHeight,jdbcType=BIGINT},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.tx != null">
        tx = #{record.tx,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update collect_history
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      income = #{record.income,jdbcType=TINYINT},
      number = #{record.number,jdbcType=DECIMAL},
      token_id = #{record.tokenId,jdbcType=INTEGER},
      operate = #{record.operate,jdbcType=TINYINT},
      from = #{record.from,jdbcType=VARCHAR},
      to = #{record.to,jdbcType=VARCHAR},
      block_height = #{record.blockHeight,jdbcType=BIGINT},
      fee = #{record.fee,jdbcType=DECIMAL},
      tx = #{record.tx,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itcast.bean.CollectHistory">
    update collect_history
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="income != null">
        income = #{income,jdbcType=TINYINT},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=DECIMAL},
      </if>
      <if test="tokenId != null">
        token_id = #{tokenId,jdbcType=INTEGER},
      </if>
      <if test="operate != null">
        operate = #{operate,jdbcType=TINYINT},
      </if>
      <if test="from != null">
        from = #{from,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        to = #{to,jdbcType=VARCHAR},
      </if>
      <if test="blockHeight != null">
        block_height = #{blockHeight,jdbcType=BIGINT},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="tx != null">
        tx = #{tx,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itcast.bean.CollectHistory">
    update collect_history
    set uid = #{uid,jdbcType=BIGINT},
      income = #{income,jdbcType=TINYINT},
      number = #{number,jdbcType=DECIMAL},
      token_id = #{tokenId,jdbcType=INTEGER},
      operate = #{operate,jdbcType=TINYINT},
      from = #{from,jdbcType=VARCHAR},
      to = #{to,jdbcType=VARCHAR},
      block_height = #{blockHeight,jdbcType=BIGINT},
      fee = #{fee,jdbcType=DECIMAL},
      tx = #{tx,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>