<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.dao.MiniKeyValueMapper">
  <resultMap id="BaseResultMap" type="com.itcast.bean.MiniKeyValue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="collection" jdbcType="VARCHAR" property="collection" />
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <id column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.itcast.bean.MiniKeyValue">
    <result column="value" jdbcType="LONGVARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, collection, uuid, name
  </sql>
  <sql id="Blob_Column_List">
    value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.itcast.bean.MiniKeyValueExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mini_key_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.itcast.bean.MiniKeyValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mini_key_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.itcast.bean.MiniKeyValueKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mini_key_value
    where id = #{id,jdbcType=INTEGER}
      and collection = #{collection,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.itcast.bean.MiniKeyValueKey">
    delete from mini_key_value
    where id = #{id,jdbcType=INTEGER}
      and collection = #{collection,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.itcast.bean.MiniKeyValueExample">
    delete from mini_key_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itcast.bean.MiniKeyValue">
    insert into mini_key_value (id, collection, uuid, 
      name, value)
    values (#{id,jdbcType=INTEGER}, #{collection,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itcast.bean.MiniKeyValue">
    insert into mini_key_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itcast.bean.MiniKeyValueExample" resultType="java.lang.Long">
    select count(*) from mini_key_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mini_key_value
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.collection != null">
        collection = #{record.collection,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update mini_key_value
    set id = #{record.id,jdbcType=INTEGER},
      collection = #{record.collection,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mini_key_value
    set id = #{record.id,jdbcType=INTEGER},
      collection = #{record.collection,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itcast.bean.MiniKeyValue">
    update mini_key_value
    <set>
      <if test="value != null">
        value = #{value,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and collection = #{collection,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.itcast.bean.MiniKeyValue">
    update mini_key_value
    set value = #{value,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and collection = #{collection,jdbcType=VARCHAR}
      and uuid = #{uuid,jdbcType=VARCHAR}
      and name = #{name,jdbcType=VARCHAR}
  </update>
</mapper>