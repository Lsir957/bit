<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.dao.MiniPostsMapper">
  <resultMap id="BaseResultMap" type="com.itcast.bean.MiniPosts">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="createtime" jdbcType="INTEGER" property="createtime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="comment_status" jdbcType="VARCHAR" property="commentStatus" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="updatetime" jdbcType="INTEGER" property="updatetime" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="comment" jdbcType="BIGINT" property="comment" />
    <result column="view" jdbcType="INTEGER" property="view" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.itcast.bean.MiniPostsWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, uuid, createtime, status, comment_status, password, name, updatetime, pid, 
    level, type, comment, view
  </sql>
  <sql id="Blob_Column_List">
    content, title, description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.itcast.bean.MiniPostsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mini_posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.itcast.bean.MiniPostsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mini_posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mini_posts
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mini_posts
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itcast.bean.MiniPostsExample">
    delete from mini_posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itcast.bean.MiniPostsWithBLOBs">
    insert into mini_posts (id, uid, uuid, 
      createtime, status, comment_status, 
      password, name, updatetime, 
      pid, level, type, comment, 
      view, content, title, 
      description)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{commentStatus,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{updatetime,jdbcType=INTEGER}, 
      #{pid,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{comment,jdbcType=BIGINT}, 
      #{view,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}, #{title,jdbcType=LONGVARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itcast.bean.MiniPostsWithBLOBs">
    insert into mini_posts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="view != null">
        view,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=BIGINT},
      </if>
      <if test="view != null">
        #{view,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itcast.bean.MiniPostsExample" resultType="java.lang.Long">
    select count(*) from mini_posts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mini_posts
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.commentStatus != null">
        comment_status = #{record.commentStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=BIGINT},
      </if>
      <if test="record.view != null">
        view = #{record.view,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update mini_posts
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      comment_status = #{record.commentStatus,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=BIGINT},
      view = #{record.view,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR},
      title = #{record.title,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mini_posts
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      comment_status = #{record.commentStatus,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=BIGINT},
      view = #{record.view,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itcast.bean.MiniPostsWithBLOBs">
    update mini_posts
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=BIGINT},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.itcast.bean.MiniPostsWithBLOBs">
    update mini_posts
    set uid = #{uid,jdbcType=BIGINT},
      uuid = #{uuid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      comment_status = #{commentStatus,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=BIGINT},
      view = #{view,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      title = #{title,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itcast.bean.MiniPosts">
    update mini_posts
    set uid = #{uid,jdbcType=BIGINT},
      uuid = #{uuid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      comment_status = #{commentStatus,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=BIGINT},
      view = #{view,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>